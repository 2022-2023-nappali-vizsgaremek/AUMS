name: Build Electron App

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Check Out Repository
      uses: actions/checkout@v2

    - name: Set Up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 16

    - name: Install Dependencies
      run: npm ci
      working-directory: desktop

    - name: Build And Package Electron App
      run: npm run build
      working-directory: desktop

    - name: Install Electron-Packager
      run: |
        npm install electron-packager -g
        electron-packager . --platform=win32 --arch=x64 --asar --out=dist --overwrite
      working-directory: desktop

    - name: Delete Existing Release If Exist
      run: |
        gh release delete latest --yes || true
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}

    - name: Create Release
      run: |
        gh release create latest --title "Latest Desktop Release" --notes "IGNORE the 'Source code (zip)' and 'Source code (tar.gz)' assets. Download 'AUMS-Desktop.exe' to get the latest version of the application."
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}

    - name: Fetch Release
      run: |
        echo "UPLOAD_URL=$(gh api repos/:owner/:repo/releases/tags/latest --jq '.upload_url')" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}
      with:
        upload_url: ${{ env.UPLOAD_URL }}
        asset_path: ./desktop/dist/AUMS-Desktop.exe
        asset_name: AUMS-Desktop.exe
        asset_content_type: application/octet-stream